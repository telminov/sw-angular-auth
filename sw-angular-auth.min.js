(function(){angular.module("swAuth",["ngCookies","ngRoute"]).constant("AUTH_UPDATE_USER","sw_auth_service_update_user").constant("AUTH_SERVER_REJECT","sw_auth_service_server_401_or_403_reject").config(function($httpProvider){return $httpProvider.interceptors.push("authInterceptor")}).factory("authInterceptor",function($location,$q,$rootScope,AUTH_SERVER_REJECT){return{responseError:function(response){return(401===(null!=response?response.status:void 0)||403===(null!=response?response.status:void 0))&&$rootScope.$broadcast(AUTH_SERVER_REJECT,response.status,response.data),$q.reject(response)}}}).run(function($rootScope,$location,auth,AUTH_UPDATE_USER,AUTH_SERVER_REJECT){return $rootScope.$on("$routeChangeStart",function(scope,next){var loginUrl,nextPath,ref;if(nextPath="",(null!=next&&null!=(ref=next.$$route)?ref.originalPath:void 0)&&(nextPath=next.$$route.originalPath),!auth.isAuthenticated()){if(loginUrl=auth.getLoginUrl(),loginUrl===nextPath)return;return $location.path(loginUrl)}}),$rootScope.$on(AUTH_SERVER_REJECT,function(){return auth.clearCurrentUser(),$location.path(auth.getLoginUrl())})})}).call(this),function(){angular.module("swAuth").provider("authConfig",function(){var config;return config={systemLabel:"System Label",serverAddress:"/server_url",serverLoginUrl:"/api/auth/login/",serverLogoutUrl:"/api/auth/logout/",serverUserInfoUrl:"/api/auth/current_user/",serverCSRFUrl:"/api/auth/get_csrf/",appLoginUrl:"/login/"},{$get:function(){return{getSystemLabel:function(){return config.systemLabel},getServerAddress:function(){return config.serverAddress},getServerLoginUrl:function(){return config.serverAddress+config.serverLoginUrl},getServerLogoutUrl:function(){return config.serverAddress+config.serverLogoutUrl},getServerUserInfoUrl:function(){return config.serverAddress+config.serverUserInfoUrl},getServerCSRFUrl:function(){return config.serverAddress+config.serverCSRFUrl},getAppLoginUrl:function(){return config.appLoginUrl}}},setSystemLabel:function(label){return config.systemLabel=label},setServerAddress:function(address){return config.serverAddress=address},setServerLoginUrl:function(url){return config.serverLoginUrl=url},setServerLogoutUrl:function(url){return config.serverLogoutUrl=url},setServerUserInfoUrl:function(url){return config.serverUserInfoUrl=url},setServerCSRFUrl:function(url){return config.serverCSRFUrl=url},setAppLoginUrl:function(url){return config.appLoginUrl=url}}})}.call(this),function(){angular.module("swAuth").service("auth",function($http,$rootScope,$cookieStore,$location,authConfig,AUTH_UPDATE_USER){var auth;auth=this,auth.getUser=function(){return $cookieStore.get("user")},auth.setUser=function(newUserData){var oldUserData;return oldUserData=auth.getUser(),$cookieStore.put("user",newUserData),$rootScope.$broadcast(AUTH_UPDATE_USER,newUserData,oldUserData)},auth.isAuthenticated=function(userData){var user;return user=userData||auth.getUser(),(null!=user?user.is_authenticated:void 0)||!1},auth.getName=function(userData){var user;return user=userData||auth.getUser(),null!=user?user.username:void 0},auth.getLoginUrl=function(){return authConfig.getAppLoginUrl()},auth.login=function(username,password){var loginPromise,loginUrl;return loginUrl=authConfig.getServerLoginUrl(),loginPromise=$http({method:"POST",url:loginUrl,data:$.param({username:username,password:password}),withCredentials:!0}),loginPromise=loginPromise.then(function(){return auth.getCurrentUser()})},auth.getCurrentUser=function(){var userPromise;return userPromise=$http({method:"GET",url:authConfig.getServerUserInfoUrl(),withCredentials:!0}),userPromise=userPromise.then(function(response){var newUserData;return newUserData=response.data,auth.setUser(newUserData),newUserData})},auth.clearCurrentUser=function(){var newUserData;return newUserData={},auth.setUser(newUserData)},auth.logout=function(){var logoutPromise;return logoutPromise=$http({method:"POST",url:authConfig.getServerLogoutUrl(),withCredentials:!0}),logoutPromise.then(function(){return auth.clearCurrentUser()}),logoutPromise},auth.isLoginPage=function(){return $location.path()===authConfig.getAppLoginUrl()}})}.call(this),function(){angular.module("swAuth").controller("AuthLoginCtrl",function($scope,$location,auth,authConfig){var fail,success;return $scope.header=authConfig.getSystemLabel(),success=function(){return $location.path("/")},fail=function(response){var ref;return $scope.loginErrors=(null!=(ref=response.data)?ref.errors:void 0)||["Ошибка аутентификации"]},$scope.logIn=function(){var loginPromise;return $scope.loginErrors=void 0,loginPromise=auth.login($scope.login,$scope.password),loginPromise.then(success,fail)}})}.call(this),function(){angular.module("swAuth").controller("AuthLogoutCtrl",function($scope,$location,$log,auth,authConfig){return $scope.header=authConfig.getSystemLabel(),$scope.inProcess=!0,auth.logout().then(function(){return $scope.inProcess=!1,$location.path("/")},function(response){return $scope.inProcess=!1,$log.error(response),$scope.logoutError="Logout error"})})}.call(this);